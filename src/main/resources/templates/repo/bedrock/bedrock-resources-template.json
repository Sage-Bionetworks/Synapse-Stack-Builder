{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "...",
	"Resources": {
		"bedrockAgentRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "bedrock.amazonaws.com"
							},
							"Action": "sts:AssumeRole",
							"Condition": {
								"StringEquals": {
									"aws:SourceAccount": {
										"Ref": "AWS::Region"
									}
								},
								"ArnLike": {
									"aws:SourceArn": {
										"Fn::Sub": "arn:aws:bedrock:#[[${AWS::Region}]]#:#[[${AWS::AccountId}]]#:agent/*"
									}
								}
							}
						}
					]
				},
				"Policies": [
					{
						"PolicyName": "bedrockAgentPolicy",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": "bedrock:InvokeModel",
									"Resource": [
										{
											"Fn::Sub": "arn:aws:bedrock:#[[${AWS::Region}]]#::foundation-model/*"
										}
									]
								},
								{
									"Effect": "Allow",
									"Action": "lambda:*",
									"Resource": [
										{
											"Fn::Sub": "arn:aws:lambda:#[[${AWS::Region}]]#:#[[${AWS::AccountId}]]#:function:*"
										}
									]
								}
							]
						}
					}
				]
			}
		},
		"lambdaServiceRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Action": "sts:AssumeRole",
							"Effect": "Allow",
							"Principal": {
								"Service": "lambda.amazonaws.com"
							}
						}
					],
					"Version": "2012-10-17"
				},
				"ManagedPolicyArns": [
					{
						"Fn::Sub": "arn:#[[${AWS::Partition}]]#:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
					}
				]
			}
		},
		"baseLambdaLayer": {
			"Type": "AWS::Lambda::LayerVersion",
			"Properties": {
				"CompatibleRuntimes": [
					"java17"
				],
				"Content": {
					"S3Bucket": "${bucketName}",
					"S3Key": "${layerZipKey}"
				},
				"Description": "This layer contains all of the dependnecies for the agent function lambda.",
				"LayerName": "${layerName}",
				"LicenseInfo": "MIT"
			}
		},
		"actionGroupLambdaFuncion": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"S3Bucket": "${bucketName}",
					"S3Key": "${lambdaJarKey}"
				},
				"Description": "This jar file contains the lambda function (without-dependencies} used for agent functions",
				"MemorySize": 512,
				"Timeout": 15,
				"Handler": "org.sagebionetworks.agent.action.MainRequestHandler::handleRequest",
				"Layers": [
					{
						"Ref": "baseLambdaLayer"
					}
				],
				"Runtime": "java17",
				"Architectures": [
					"x86_64"
				],
				"EphemeralStorage": {
					"Size": 512
				},
				"PackageType": "Zip",
				"Role": {
					"Fn::GetAtt": [
						"lambdaServiceRole",
						"Arn"
					]
				},
				"SnapStart": {
					"ApplyOn": "None"
				},
				"RuntimeManagementConfig": {
					"UpdateRuntimeOn": "Auto"
				}
			}
		},
		"bedrockAgent": {
			"Type": "AWS::Bedrock::Agent",
			"Properties": {
				"ActionGroups": [
					{
						"ActionGroupExecutor": {
							"Lambda": {
								"Fn::GetAtt": [
									"actionGroupLambdaFuncion",
									"Arn"
								]
							}
						},
						"ActionGroupName": "discovery",
						"ActionGroupState": "ENABLED",
						"Description": "Use the functions in this action group to help the user discover new Entities within Synapse.",
						"FunctionSchema": {
							"Functions": [
								{
									"Description": "Use this function to help a user execute a search against Synapse by providing the function with a search term from the user. The results should be displayed in a table with the following columns.  The first column should a row counter starting with 1 and incrementing by 1 for each row.  The second column should contain the id (the syn number) of the result.  The third column should contain the name of the result.  The fourth column should contain a short summary of the description when avaiable.",
									"Name": "search",
									"Parameters": {
										"term": {
											"Description": "The search term from the user that will be used as the search input.",
											"Required": true,
											"Type": "string"
										}
									}
								}
							]
						},
						"SkipResourceInUseCheckOnDelete": false
					}
				],
				"AgentName": "${agentName}",
				"AgentResourceRoleArn": {
					"Fn::GetAtt": [
						"bedrockAgentRole",
						"Arn"
					]
				},
				"AutoPrepare": true,
				"Description": "Test of the use of actions groups to allow the agent to make Synapse API calls.",
				"FoundationModel": "anthropic.claude-v3",
				"IdleSessionTTLInSeconds": 3600,
				"Instruction": "You are a helpful agent that can assist the user in discovering new Entities within Synapse.",
				"SkipResourceInUseCheckOnDelete": false
			}
		}
	}
}
