#if($sqsQueueDescriptors and $snsTopicDescriptors)
    ,
    #foreach( $queueDescriptor in $sqsQueueDescriptors)
        "${queueDescriptor.queueReferenceName}Queue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": "${stack}-${instance}-${queueDescriptor.queueName}",
                #if ($queueDescriptor.deadLetterQueueMaxFailureCount)
                "RedrivePolicy": {
                    "deadLetterTargetArn" : {"Fn::GetAtt" : [ "${queueDescriptor.queueReferenceName}DeadLetter" , "Arn" ]},
                    "maxReceiveCount" : "${queueDescriptor.deadLetterQueueMaxFailureCount}"
                },
                #end
                "VisibilityTimeout":"${queueDescriptor.messageVisibilityTimeoutSec}"
                #if ($queueDescriptor.messageRetentionPeriodSec)
                ,"MessageRetentionPeriod":"${queueDescriptor.messageRetentionPeriodSec}"
                #end
            }
        }
        #if ($queueDescriptor.deadLetterQueueMaxFailureCount)
        ,"${queueDescriptor.queueReferenceName}DeadLetter":{
            "Type" : "AWS::SQS::Queue",
            "Properties":{
            "QueueName": "${stack}-${instance}-${queueDescriptor.queueName}-dead-letter"
            }
        }
        #end
        #if($queueDescriptor.oldestMessageInQueueAlarmThresholdSec && ${stack} == 'prod')
        ,"${queueDescriptor.queueReferenceName}OldestMessageAlarm":{
            "Type" : "AWS::CloudWatch::Alarm",
            "Properties" : {
                "ActionsEnabled" : true,
                "AlarmActions" : [{"Fn::ImportValue": "${globalResourcesExportPrefix}-NotificationTopic"}],
                "AlarmDescription" : "Alarm when oldest message in the ${queueDescriptor.queueName} queue exceeds ${queueDescriptor.oldestMessageInQueueAlarmThresholdSec} seconds",
                "AlarmName" : "${stack}-${instance}-${queueDescriptor.queueName}-queue-oldest-message-exceed-time",
                "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
                "Dimensions" : [{
                    "Name" : "QueueName",
                    "Value" : 	{"Fn::GetAtt":["${queueDescriptor.queueReferenceName}Queue", "QueueName"]}
                }],
                "EvaluationPeriods" : 1,
                "MetricName" : "ApproximateAgeOfOldestMessage",
                "Namespace" : "AWS/SQS",
                "Period" : 300,
                "Statistic" : "Maximum",
                "Threshold" : "${queueDescriptor.oldestMessageInQueueAlarmThresholdSec}",
                "Unit" : "Seconds"
            }
        }

        #end
        ,"WriteTo${queueDescriptor.queueReferenceName}QueuePolicy":{
            "Type":"AWS::SQS::QueuePolicy",
            "Properties":{
                "PolicyDocument":{
                    "Version":"2012-10-17",
                    "Id":{
                        "Fn::Join":[
                            "/",
                            [
                                {
                                    "Fn::GetAtt":[
                                        "${queueDescriptor.queueReferenceName}Queue",
                                        "Arn"
                                    ]
                                },
                                "SQSDefaultPolicy"
                            ]
                        ]
                    },
                    "Statement":[
                        {
                            "Sid":"allow-write-sns",
                            "Effect":"Allow",
                            "Principal":"*",
                            "Action":[
                                "sqs:SendMessage"
                            ],
                            "Resource":"*",
                            "Condition":{
                                "ArnEquals":{
                                    "aws:SourceArn":[
                                        #foreach ( $subscribedTopicDescriptor in $queueDescriptor.subscribedTopicDescriptors)
                                        	#if ($subscribedTopicDescriptor.global)
	                                            {
	                                            	"Fn::ImportValue": "${globalResourcesExportPrefix}-${subscribedTopicDescriptor.topicReferenceName}Topic"
	                                            }    
                                        	#else
                                       			{
		                                            "Ref":"${subscribedTopicDescriptor.topicReferenceName}Topic"
		                                        } 	
                                        	#end
                                        #if( $foreach.hasNext) , #end
                                        #end
                                    ]
                                }
                            }
                        }
                    ]
                },
                "Queues":[
                    {
                        "Ref":"${queueDescriptor.queueReferenceName}Queue"
                    }
                ]
            }
        }
        #if( $foreach.hasNext) , #end
    #end
    ,

    #foreach( $snsTopicDescriptor in $snsTopicDescriptors)
    	#if ($snsTopicDescriptor.global)
    		#foreach($queueResourceName in $snsTopicDescriptor.subscribedQueueReferenceNames)
		    	"${snsTopicDescriptor.topicReferenceName}TopicSubscription": {
		            "Type" : "AWS::SNS::Subscription",
		            "Properties" : {
		            	"Endpoint":{"Fn::GetAtt" : [ "${queueResourceName}Queue" , "Arn" ]},
		                "Protocol": "sqs",
		                "TopicArn" : {"Fn::ImportValue": "${globalResourcesExportPrefix}-${snsTopicDescriptor.topicReferenceName}Topic"}
		            }
		        }
	    	#if( $foreach.hasNext ) , #end
	    	#end
    	#else
	        "${snsTopicDescriptor.topicReferenceName}Topic":{
	            "Type" : "AWS::SNS::Topic",
	            "Properties" : {
	                "Subscription" : [
	                #foreach($queueResourceName in $snsTopicDescriptor.subscribedQueueReferenceNames)
	                    {
	                        "Endpoint":{"Fn::GetAtt" : [ "${queueResourceName}Queue" , "Arn" ]},
	                        "Protocol": "sqs"
	                    }
	                #if( $foreach.hasNext ) , #end
	                #end
	                ],
	                "TopicName" : "${stack}-${instance}-${snsTopicDescriptor.topicName}"
	            }
	
	        }
        #end
        #if( $foreach.hasNext) , #end
    #end
#end



