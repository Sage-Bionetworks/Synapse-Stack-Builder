{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Creates the ID Generator Database resouces shared by ${stack}.",
	"Parameters": {
		"MySQLDatabaseMasterPassword": {
			"Description": "The master password for the MySQL databases.",
			"Type": "String",
			"NoEcho": true
		}
	},
	"Resources": {
		"${stack}IdGeneratorDBSubnetGroup": {
			"Type": "AWS::RDS::DBSubnetGroup",
			"Properties": {
				"DBSubnetGroupDescription": "The ID generator database is deployed to the ${subnetGroupColor} private subnets.",
				"SubnetIds": {
					"Fn::Split": [
						",",
						{
							"Fn::ImportValue": "${vpcExportPrefix}-private-subnets-${subnetGroupColor}-Private-Subnets"
						}
					]
				}
			}
		},
		"${stack}IdGeneratorDBSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Security Group for the ID generator database.",
				"VpcId": {
					"Fn::ImportValue": "${vpcExportPrefix}-VPCId"
				},
				"SecurityGroupIngress": [
					{
						"Description": "Allow all VPN traffic from TGW",
						"CidrIp": {
							"Fn::ImportValue": "${vpcExportPrefix}-VpnCidrNew"
						},
						"FromPort": "3306",
						"ToPort": "3306",
						"IpProtocol": "tcp"
					},
					{
						"Description": "Allow access to all instances within the Synapse VPC",
						"CidrIp": {
							"Fn::ImportValue": "${vpcExportPrefix}-VpcCidr"
						},
						"FromPort": "3306",
						"ToPort": "3306",
						"IpProtocol": "tcp"
					},
                    {
                        "Description": "Allow access to all instances within the old Synapse VPC",
                        "CidrIp": "${tempVpcCidr}",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "IpProtocol": "tcp"
                    }
				],
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "${stack}IdGeneratorDB"
					}
				]
			}
		},
		"${stack}IdGeneratorDBParameterGroup": {
			"Type": "AWS::RDS::DBParameterGroup",
			"Properties": {
				"Description": "Shared MySQL database parameters",
				"Family": "mysql8.0",
				"Parameters": {
					"slow_query_log": "1",
					"long_query_time": "1",
					"max_allowed_packet": "16777216",
					"log_bin_trust_function_creators": "1"
				}
			}
		},
		"${stack}IdGenerator": {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"AllocatedStorage": "20",
				"AllowMajorVersionUpgrade": false,
				"AutoMinorVersionUpgrade": true,
				"BackupRetentionPeriod": "7",
				"DBInstanceClass": "db.m6g.large",
				"DBInstanceIdentifier": "${databaseIdentifier}",
				"DBName": "${stack}idgen",
				"DBParameterGroupName": {
					"Ref": "${stack}IdGeneratorDBParameterGroup"
				},
				"DBSubnetGroupName": {
					"Ref": "${stack}IdGeneratorDBSubnetGroup"
				},
				"Engine": "MySQL",
				"EngineVersion": "8.0.35",
				"LicenseModel": "general-public-license",
				"MasterUsername": "${stack}idgenuser",
				"MasterUserPassword": {
					"Ref": "MySQLDatabaseMasterPassword"
				},
				"MultiAZ": true,
				"PreferredBackupWindow": "3:00-6:00",
				"PreferredMaintenanceWindow": "Mon:07:15-Mon:07:45",
				"PubliclyAccessible": false,
				"StorageType": "gp3",
				"VPCSecurityGroups": [
					{
						"Ref": "${stack}IdGeneratorDBSecurityGroup"
					}
				]
			}
		},
		"${stack}idGeneratorCNAME": {
             "Type" : "AWS::Route53::RecordSet",
             "Properties" : {
                "HostedZoneId" : "${hostedZone}",
                "Name" : "${databaseIdentifier}.${stack}.sagebase.org",
                "ResourceRecords" : [
                   { "Fn::GetAtt" : [ "${stack}IdGenerator", "Endpoint.Address" ] }
                ],
                "TTL" : "300",
                "Type" : "CNAME"
             }
		},
		#if(${stack} == 'prod')
		"${stack}IdGeneratorAlarmSwapUsage": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Fn::ImportValue": "${globalResourcesExportPrefix}-NotificationTopic"
					}
				],
				"AlarmDescription": "Alert when database swap usage is exceeded.",
				"AlarmName": "${databaseIdentifier}-Swap-Usage",
				"ComparisonOperator": "GreaterThanThreshold",
				"Dimensions": [
					{
						"Name": "DBInstanceIdentifier",
						"Value": "${databaseIdentifier}"
					}
				],
				"EvaluationPeriods": 2,
				"Period": 300,
				"MetricName": "SwapUsage",
				"Namespace": "AWS/RDS",
				"Statistic": "Average",
				"Threshold": 536870912
			}
		},
		"${stack}IdGeneratorHighWriteLatency": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Fn::ImportValue": "${globalResourcesExportPrefix}-NotificationTopic"
					}
				],
				"AlarmDescription": "Alert when database write latency is exceeded.",
				"AlarmName": "${databaseIdentifier}-High-Write-Latency",
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"Dimensions": [
					{
						"Name": "DBInstanceIdentifier",
						"Value": "${databaseIdentifier}"
					}
				],
				"EvaluationPeriods": 1,
				"Period": 300,
				"MetricName": "WriteLatency",
				"Namespace": "AWS/RDS",
				"Statistic": "Average",
				"Threshold": 0.1
			}
		},
		"${stack}IdGeneratorHighCPUUtilization": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Fn::ImportValue": "${globalResourcesExportPrefix}-NotificationTopic"
					}
				],
				"AlarmDescription": "Alert when database CPU utilization is exceeded.",
				"AlarmName": "${databaseIdentifier}-High-CPU-Utilization",
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"Dimensions": [
					{
						"Name": "DBInstanceIdentifier",
						"Value": "${databaseIdentifier}"
					}
				],
				"EvaluationPeriods": 1,
				"Period": 300,
				"MetricName": "CPUUtilization",
				"Namespace": "AWS/RDS",
				"Statistic": "Average",
				"Threshold": 90.0
			}
		},
		"${stack}IdGeneratorLowFreeStorageSpace": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Fn::ImportValue": "${globalResourcesExportPrefix}-NotificationTopic"
					}
				],
				"AlarmDescription": "Alert when database free storage space is low.",
				"AlarmName": "${databaseIdentifier}-Low-Free-Storage-Space",
				"ComparisonOperator": "LessThanOrEqualToThreshold",
				"Dimensions": [
					{
						"Name": "DBInstanceIdentifier",
						"Value": "${databaseIdentifier}"
					}
				],
				"EvaluationPeriods": 1,
				"Period": 300,
				"MetricName": "FreeStorageSpace",
				"Namespace": "AWS/RDS",
				"Statistic": "Average",
				"Threshold": 524288
			}
		}
		#end
	},
	"Outputs": {
		"${stack}IdGeneratorEndpoint": {
			"Description": "The elastic bean stalk application ID",
			"Value": {
				"Fn::GetAtt": [
					"${stack}IdGenerator",
					"Endpoint.Address"
				]
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"${stack}IdGenerator-Endpoint"
						]
					]
				}
			}
		}
	}
}
