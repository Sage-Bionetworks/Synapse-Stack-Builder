#foreach( $publicSubnet in $subnets.publicSubnets )
	,
	"${publicSubnet.name}": {
		"Type": "AWS::EC2::Subnet",
		"Properties": {
			"MapPublicIpOnLaunch": true,
			"VpcId": {
				"Ref": "VPC"
			},
			"CidrBlock": "${publicSubnet.cidr}",
			"AvailabilityZone": "${publicSubnet.availabilityZone}",
			"Tags": [
				{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				},
				{
					"Key": "Name",
					"Value": "${publicSubnet.name}"
				}
			]
		}
	},
	"${publicSubnet.name}RouteTable": {
		"Type": "AWS::EC2::RouteTable",
		"Properties": {
			"VpcId": {
				"Ref": "VPC"
			},
			"Tags": [
				{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				},
				{
					"Key": "Name",
					"Value": "${publicSubnet.name}"
				}
			]
		}
	},
	"${publicSubnet.name}RouteVPN": {
		"Type": "AWS::EC2::Route",
		"Properties": {
			"RouteTableId": {
				"Ref": "${publicSubnet.name}RouteTable"
			},
			"DestinationCidrBlock": "10.1.0.0/16",
			"VpcPeeringConnectionId": {
				"Ref": "VpcPeeringConnection"
			}
		}
	},
	"${publicSubnet.name}PublicRoute": {
		"Type": "AWS::EC2::Route",
		"DependsOn": "InternetGatewayAttachment",
		"Properties": {
			"RouteTableId": {
				"Ref": "${publicSubnet.name}RouteTable"
			},
			"DestinationCidrBlock": "0.0.0.0/0",
			"GatewayId": {
				"Ref": "InternetGateway"
			}
		}
	},
	"${publicSubnet.name}RouteTableAssociation": {
		"Type": "AWS::EC2::SubnetRouteTableAssociation",
		"Properties": {
			"SubnetId": {
				"Ref": "${publicSubnet.name}"
			},
			"RouteTableId": {
				"Ref": "${publicSubnet.name}RouteTable"
			}
		}
	},
	"${publicSubnet.name}NetworkAclAssociation": {
		"Type": "AWS::EC2::SubnetNetworkAclAssociation",
		"Properties": {
			"SubnetId": {
				"Ref": "${publicSubnet.name}"
			},
			"NetworkAclId": {
				"Ref": "NetworkAcl"
			}
		}
	},
	"${publicSubnet.name}NATGatwayEIP" : {
		"Type" : "AWS::EC2::EIP",
		"Properties" : {
			"Domain" : "vpc"
		}
	},	
	"${publicSubnet.name}NATGatway" : {
		"DependsOn" : "InternetGatewayAttachment",
		"Type" : "AWS::EC2::NatGateway",
		"Properties" : {
			"AllocationId" : { 
				"Fn::GetAtt" : ["${publicSubnet.name}NATGatwayEIP", "AllocationId"]
			},
			"SubnetId" : { "Ref" : "${publicSubnet.name}"},
			"Tags": [
				{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				},
				{
					"Key": "Name",
					"Value": "${publicSubnet.name}"
				}
			]
		}
	}
#end
#foreach( $subnetGroup in $subnets.privateSubnetGroups )
	#foreach ( $privateSubnet in $subnetGroup.subnets )
	,
	"${privateSubnet.name}": {
		"Type": "AWS::EC2::Subnet",
		"Properties": {
			"MapPublicIpOnLaunch": false,
			"VpcId": {
				"Ref": "VPC"
			},
			"CidrBlock": "${privateSubnet.cidr}",
			"AvailabilityZone": "${privateSubnet.availabilityZone}",
			"Tags": [
				{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				},
				{
					"Key": "Name",
					"Value": "${privateSubnet.name}"
				}
			]
		}
	},
	"${privateSubnet.name}RouteTable": {
		"Type": "AWS::EC2::RouteTable",
		"Properties": {
			"VpcId": {
				"Ref": "VPC"
			},
			"Tags": [
				{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				},
				{
					"Key": "Name",
					"Value": "${privateSubnet.name}"
				}
			]
		}
	},
	"${privateSubnet.name}RouteVPN": {
		"Type": "AWS::EC2::Route",
		"Properties": {
			"RouteTableId": {
				"Ref": "${privateSubnet.name}RouteTable"
			},
			"DestinationCidrBlock": "10.1.0.0/16",
			"VpcPeeringConnectionId": {
				"Ref": "VpcPeeringConnection"
			}
		}
	},
	"${privateSubnet.name}PrivateRoute": {
		"Type": "AWS::EC2::Route",
		"Properties": {
			"RouteTableId": {
				"Ref": "${privateSubnet.name}RouteTable"
			},
			"DestinationCidrBlock": "0.0.0.0/0",
			"NatGatewayId": {
				"Ref": "Public${privateSubnet.getAvailabilityZoneRef()}NATGatway"
			}
		}
	},
	"${privateSubnet.name}RouteTableAssociation": {
		"Type": "AWS::EC2::SubnetRouteTableAssociation",
		"Properties": {
			"SubnetId": {
				"Ref": "${privateSubnet.name}"
			},
			"RouteTableId": {
				"Ref": "${privateSubnet.name}RouteTable"
			}
		}
	},
	"${privateSubnet.name}NetworkAclAssociation": {
		"Type": "AWS::EC2::SubnetNetworkAclAssociation",
		"Properties": {
			"SubnetId": {
				"Ref": "${privateSubnet.name}"
			},
			"NetworkAclId": {
				"Ref": "NetworkAcl"
			}
		}
	}
	#end
#end